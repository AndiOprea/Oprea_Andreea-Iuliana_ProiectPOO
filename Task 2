#include<iostream>

using namespace std;

//Domeniu ARTA: Carte, Album(muzical), Tablou

class Carte {
private:
	static int nrVolume;
	const int editie;
	string titlu;
	float pret;
	bool bestseller;
	int nrPersonaje;
	string* numePersonaje;

public:
	static int getNrVolme() 
	{
		return nrVolume;
	}

	Carte() : editie(nrVolume++) {
		this->titlu = "Throne of Glass";
		this->pret = 50.7;
		this->bestseller = true;
		this->nrPersonaje = 0;
		this->numePersonaje = NULL;
	}

	Carte(string titlu, float pret):editie(nrVolume)
	{
		nrVolume++;
		this->titlu = titlu;
		this->pret = pret;
		this->bestseller = true;
		this->nrPersonaje = 0;
		this->numePersonaje = NULL;
	}

	Carte(string titlu, float pret, bool bestseller, int nrPersonaje, string* numePersonaje): editie(nrVolume)
	{
		nrVolume++;
		this->titlu = titlu;
		this->pret = pret;
		this->bestseller = bestseller;
		this->nrPersonaje = nrPersonaje;
		this->numePersonaje = new string [nrPersonaje];
		for (int i = 0; i < nrPersonaje; i++)
		{
			this->numePersonaje[i] = numePersonaje[i];
		}
	}

	Carte(const Carte& carte1) :editie(nrVolume++)
	{
		this->titlu = carte1.titlu;
		this->pret = carte1.pret;
		this->bestseller = carte1.bestseller;
		this->nrPersonaje = carte1.nrPersonaje;
		this->numePersonaje = new string[carte1.nrPersonaje];
		for (int i = 0; i < carte1.nrPersonaje; i++)
		{
			this->numePersonaje[i] = carte1.numePersonaje[i];
		}
	}


	int getEditie()
	{
		return editie;
	}

	string getTitlu() 
	{
		return titlu;
	}

	float getPret()
	{
		return pret;
	}

	bool getBestseller()
	{
		return bestseller;
	}

	int getnrPersonaje()
	{
		return nrPersonaje;
	}

	string* getNumePersonaje()
	{
		return numePersonaje;
	}

	void setPret(float pret)
	{
		if (pret > 0)
		{
			this->pret = pret;
		}
	}

	void setPersonaje(int nrPersonaje, string* numePersonaje)
	{
		if (nrPersonaje > 0)
		{
			this->nrPersonaje = nrPersonaje;
			if (this->nrPersonaje != NULL)
			{
				delete[]this->numePersonaje;
			}
			this->numePersonaje = new string[nrPersonaje];
			for (int i = 0; i < nrPersonaje; i++)
			{
				this->numePersonaje[i] = numePersonaje[i];
			}
		}
	}

	void setBestseller(bool bestseller)
	{
		if (bestseller == true)
		{
			this->bestseller = bestseller;
		}
		else this->bestseller = bestseller;
	}

	void setNrPersonaje(int nrPersonaje)
	{
		if (nrPersonaje > 0)
			this->nrPersonaje = nrPersonaje;
	}

	void setTitlu(string titlu)
	{
		if (titlu.length() > 3)
			this->titlu = titlu;
	}

	~Carte() {
		if (this->numePersonaje != NULL)
		{
			delete[]this->numePersonaje;
		}
	}

	void afisareCarte() 
	{
		cout << "Cartea " << titlu << " are prettul de " << pret << " lei ";
		if (bestseller == true)cout << " si a catigat titlul de bestseller, avand un numar de " << nrPersonaje << " personaj/e: ";
		else cout << " si desi nu este bestseller, este o carte care se merita citita datorita celor " << nrPersonaje << " personaje: ";
		if (nrPersonaje > 0)
		{
			for (int i = 0; i < nrPersonaje; i++)\
			{
				cout << numePersonaje[i];
			}
		}
		else cout << "NA";
		cout << endl;
	}

	void adaugarePersonaj(string numePersonaje)
	{
		string* aux = new string[this->nrPersonaje + 1];
		for (int i = 0; i < this->nrPersonaje; i++)
		{
			aux[i] = this->numePersonaje[i];
		}
			aux[this->nrPersonaje] = numePersonaje;
			this->nrPersonaje++;
			if (this->numePersonaje)
			{
				delete[]this->numePersonaje;
			}
			this->numePersonaje = aux;
	}
	
	friend string getSirPersonaje(const Carte& c);
	friend int getNrPersonaje(const Carte& c);
};

int Carte::nrVolume = 7;

string getSirPersonaje(const Carte& c)
{
	string aux = "";
	for (int i = 0; i < c.nrPersonaje; i++)
	{
		aux += c.numePersonaje[i] + ",";
	}
	return aux;
}

int getNrPersonaje(const Carte& c)
{
	return c.nrPersonaje;
}

class Album {
private:
	static int nrAlbum;
	const int anAlbum;
	string numeAlbum;
	string artist;
	int nrPiese;
	string* titluPiese;
public:
	static int getnrAlbum() 
	{
		return nrAlbum;
	}

	Album() :anAlbum(nrAlbum++)
	{
		this-> numeAlbum = "Midnights";
		this->artist = "Taylor Swift";
		this->nrPiese = 0;
		this->titluPiese = NULL;
	}

	Album(string numeAlbum, string artist) : anAlbum(nrAlbum)
	{
		nrAlbum++;
		this->numeAlbum = numeAlbum;
		this->artist = artist;
		this->nrPiese = 0;
		this->titluPiese = NULL;
	}

	Album(string numeAlbum, string artist,int nrPiese, string* titluPiese) : anAlbum(nrAlbum)
	{
		nrAlbum++;
		this->numeAlbum = numeAlbum;
		this->artist = artist;
		this->nrPiese = nrPiese;
		this->titluPiese = new string [nrPiese];
		for(int i=0;i<nrPiese;i++)
		{ 
			this->titluPiese[i] = titluPiese[i];
		}
	}

	Album(const Album& album2) : anAlbum(nrAlbum++)
	{
		this->numeAlbum = album2.numeAlbum;
		this->artist = album2.artist;
		this->nrPiese = album2.nrPiese;
		this->titluPiese = new string[album2.nrPiese];
		for (int i = 0; i < album2.nrPiese; i++)
		{
			this->titluPiese[i] = album2.titluPiese[i];
		}
	}

	int getAnAlbum()
	{
		return anAlbum;
	}

	string getNumeAlbum()
	{
		return numeAlbum;
	}

	string getArtist()
	{
		return artist;
	}
	
	int getNrPiese()
	{
		return nrPiese;
	}

	string* getTitluPiese()
	{
		return titluPiese;
	}

	void setNumeAlbum(string numeAlbum)
	{
		if (numeAlbum.length() > 3)
			this->numeAlbum = numeAlbum;
	}

	void setArtist(string artist)
	{
		if (artist.length() > 3)
			this->artist = artist;
	}

	void setNrPiese(int nrPiese)
	{
		if (nrPiese > 0)
			this->nrPiese = nrPiese;
	}

	void setTitluPiese(int nrPiese, string* titluPiese)
	{
		if (nrPiese > 0)
		{
			this->nrPiese = nrPiese;
			if (this->nrPiese != NULL)
			{
				delete[]this->titluPiese;
			}
			this->titluPiese = new string[nrPiese];
			for (int i = 0; i < nrPiese; i++)
			{
				this->titluPiese[i] = titluPiese[i];
			}
		}
	}

	~Album()
	{
		if (this->titluPiese != NULL)
		{
			delete[]this->titluPiese;
		}
	}

	void afisareAlbum()
	{
		cout << artist << " a scos albumulul " << numeAlbum << " ce contine " << nrPiese << " melodii, precum: ";
		if (nrPiese > 0)
		{
			for (int i = 0; i < nrPiese; i++)
			{
				cout << titluPiese[i] << ", ";
			}
		}
		else cout << "NA";
		cout << endl;
	}

	void adaugarePiese(string titluPiese)
	{
		string* aux = new string[this->nrPiese + 1];
		for (int i = 0; i < this->nrPiese; i++)
		{
			aux[i] = this->titluPiese[i];
		}
		aux[this->nrPiese] = titluPiese;
		this->nrPiese++;
		if (this->titluPiese)
		{
			delete[]this->titluPiese;
		}
		this->titluPiese = aux;
	}

	friend string getSirNumePiese(const Album& a);

	friend int getNrPiese1(const Album& a);
};

int Album::nrAlbum = 0;

string getSirNumePiese(const Album& a)
{
	string aux = "";
	for (int i = 0; i < a.nrPiese; i++)
	{
		aux += a.titluPiese[i] + ",";
	}
	return aux;
}

int getNrPiese1(const Album& a)
{
	return a.nrPiese;
}


class Tablou{
private:
	static int nrTablou;
	const int serie;
	string denumire;
	string pictor;
	int nrLucrari;
	string* numeLucrari;
public:
	static int getnrTablou()
	{
		return nrTablou;
	}

	Tablou() : serie(nrTablou++)
	{
		this->denumire = "Noapte";
		this->pictor = "Ana Popescu";
		this->nrLucrari = 0;
		this->numeLucrari = NULL;
	}

	Tablou(string denumire, string pictor) : serie(nrTablou)
	{
		nrTablou++;
		this->denumire = denumire;
		this->pictor = pictor;
		this->nrLucrari = 0;
		this->numeLucrari = NULL;
	}

	Tablou(string denumire, string pictor, int nrLucrari, string* numeLucrari) : serie(nrTablou)
	{
		nrTablou++;
		this->denumire = denumire;
		this->pictor = pictor;
		this->nrLucrari = nrLucrari;
		this->numeLucrari = new string[nrLucrari];
		for (int i = 0; i < nrLucrari; i++)
		{
			this->numeLucrari[i] = numeLucrari[i];
		}
	}

	int getSerie()
	{
		return serie;
	}

	string getDenumire()
	{
		return denumire;
	}

	string getPictor()
	{
		return pictor;
	}

	int getNrLucrari()
	{
		return nrLucrari;
	}

	string* getNumeLucrari()
	{
		return numeLucrari;
	}

	void setDenumire(string denumire)
	{
		if (denumire.length() > 3)
			this->denumire= denumire;
	}

	void setPictor(string pictor)
	{
		if (pictor.length() > 3)
			this->pictor= pictor;
	}

	void setNrLucrari(int nrLucrari)
	{
		if (nrLucrari > 0)
			this->nrLucrari = nrLucrari;
	}

	void setNumeLucrari(int nrLucrari, string* numeLucrari)
	{
		if (nrLucrari > 0)
		{
			this->nrLucrari = nrLucrari;
			if (this->nrLucrari != NULL)
			{
				delete[]this->numeLucrari;
			}
			this->numeLucrari = new string[nrLucrari];
			for (int i = 0; i < nrLucrari; i++)
			{
				this->numeLucrari[i] = numeLucrari[i];
			}
		}
	}

	Tablou(const Tablou& tablou3) :serie(nrTablou++)
	{
		this->denumire = tablou3.denumire;
		this->pictor = tablou3.pictor;
		this->nrLucrari = tablou3.nrLucrari;
		this->numeLucrari = new string[tablou3.nrLucrari];
		for (int i = 0; i < tablou3.nrLucrari; i++)
		{
			this->numeLucrari[i] = tablou3.numeLucrari[i];
		}
	}

	~Tablou()
	{
		if (this->numeLucrari != 0)
		{
			delete[]this->numeLucrari;
		}
	}

	void afisareTablou()
	{
		cout << "Artistul " << pictor << " a realizat tabloul " << denumire << ", iar inainte de acesta se putea lauda cu " << nrLucrari << " tablouri, precum: ";
		if (nrLucrari > 0)
		{
			for (int i = 0; i < nrLucrari; i++)
			{
				cout << numeLucrari[i] << ", ";
			}
		}
		else cout << "NA";
		cout << endl;
	}

	void adaugareLucrare(string numeLucrari)
	{
		string* aux = new string[this->nrLucrari + 1];
		for (int i = 0; i < this->nrLucrari; i++)
		{
			aux[i] = this->numeLucrari[i];
		}
		aux[this->nrLucrari] = numeLucrari;
		this->nrLucrari++;
		if (this->numeLucrari)
		{
			delete[]this->numeLucrari;
		}
		this->numeLucrari = aux;
	}

	friend string getSirNumeLucrari(const Tablou& t);

	friend int getNrLucrari1(const Tablou& t);
};

int Tablou::nrTablou = 0;

string getSirNumeLucrari(const Tablou& t)
{
	string aux = "";
	for (int i = 0; i < t.nrLucrari; i++)
	{
		aux += t.numeLucrari[i] + ",";
	}
	return aux;
}

int getNrLucrari1(const Tablou& t)
{
	return t.nrLucrari;
}

void main()
{
	Carte carte1;
	carte1.adaugarePersonaj("Aelin Ashryver.");
	carte1.afisareCarte();

	Carte carte2("Red Rising",60);
	carte2.adaugarePersonaj("Darrow O'Lykos.");
	carte2.afisareCarte();

	string* numePersonaje = new string[3];
	numePersonaje[0] = "Pippa Fitz-Amobi, ";
	numePersonaje[1] = "Ravi Singh, ";
	numePersonaje[2] = "Andie Bell. ";
	Carte carte3("A Good Girl's Guide to Murder", 57.6, false, 3, numePersonaje);
	carte3.afisareCarte();
	
	Carte carte4 = carte1;
	carte4.afisareCarte();

	cout << carte1.getNrVolme() << endl;

	cout << carte1.getEditie() << endl;

	cout << carte3.getTitlu() << endl;
	carte3.setTitlu("Hunger Games");
	cout << carte3.getTitlu()<<endl;

	cout << carte2.getPret() << endl;
	carte2.setPret(34.5);
	cout << carte2.getPret() << endl;

	cout << carte1.getBestseller() << endl;
	carte1.setBestseller(false);
	cout << carte1.getBestseller()<<endl;

	cout << carte2.getnrPersonaje() << endl;
	carte2.setNrPersonaje(3);
	cout << carte2.getnrPersonaje()<<endl;

	cout << carte3.getNumePersonaje()[1] << endl;
	string* vector = new string[2]{ "Rowan Whitethorn, ", " Dorian Havilliard" };
	carte3.setPersonaje(2, vector);
	carte3.afisareCarte();

	cout << getSirPersonaje(carte1) << endl;
	cout << getNrPersonaje(carte2) << endl;



	Album album1;
	album1.adaugarePiese("Karma");
	album1.afisareAlbum();

	Album album2("Death of an Optimist", "Grandson");
	album2.adaugarePiese("Bury with my face down");
	album2.afisareAlbum();

	string* titluPiese = new string[2];
	titluPiese[0] = "Bones";
	titluPiese[1] = "Lonely";
	Album album3("Mercury", "Imagine Dragons", 2, titluPiese);
	album3.adaugarePiese("Sharks");
	album3.afisareAlbum();

	Album album4 = album2;
	album4.afisareAlbum();

	cout << Album::getnrAlbum() << endl;

	cout << album1.getAnAlbum()<<endl;

	cout << album1.getNumeAlbum() << endl;
	album1.setNumeAlbum("Reputation");
	cout << album1.getNumeAlbum() << endl;

	cout << album2.getArtist() << endl;
	album2.setArtist("Eminem");
	cout << album2.getArtist() << endl;

	cout << album3.getNrPiese() << endl;
	album3.setNrPiese(2);
	cout << album3.getNrPiese() << endl;

	cout << album3.getTitluPiese()[2] << endl;
	string* vector1 = new string[2]{ "Demons, ", " Life" };
	album3.setTitluPiese(2, vector1);
	album3.afisareAlbum();

	cout << getSirNumePiese(album1) << endl;

	cout << getNrPiese1(album2) << endl;



	Tablou tablou1;
	tablou1.adaugareLucrare("Dimineata");
	tablou1.afisareTablou();

	Tablou tablou2("Viziune","Sebastian Stan");
	tablou2.adaugareLucrare("Intuneric");
	tablou2.afisareTablou();

	string* numeLucrari = new string[2];
	numeLucrari[0] = "In afara";
	numeLucrari[1] = "Exclus";
	Tablou tablou3("Reluare", "Andrei Petrescu", 2, numeLucrari);
	tablou3.adaugareLucrare("Trecut");
	tablou3.afisareTablou();

	Tablou tablou4 = tablou3;
	tablou4.afisareTablou();

	cout << Tablou::getnrTablou() << endl;

	cout << tablou1.getSerie() << endl;
	
	cout << tablou1.getDenumire() << endl;
	tablou1.setDenumire("Apus de Soare");
	cout << tablou1.getDenumire() << endl;

	cout << tablou2.getPictor() << endl;
	tablou2.setPictor("Mihai Anghel");
	cout << tablou2.getPictor() << endl;

	cout << tablou3.getNrLucrari() << endl;
	tablou3.setNrLucrari(3);
	cout << tablou3.getNrLucrari() << endl;

	cout << tablou1.getNumeLucrari()[1] << endl;
	string* vector2 = new string[1]{ " Demoni " };
	tablou1.setNumeLucrari(1, vector2);
	tablou1.afisareTablou();

	cout << getSirNumeLucrari(tablou1) << endl;

	cout << getNrLucrari1(tablou2) << endl;
}
